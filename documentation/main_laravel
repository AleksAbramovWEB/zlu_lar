##Моя шпаргалка `LARAVEL`

Основная кадировка: utf8mb4_unicode_ci;


###_COMPOSER:_

- обновить все пакеты: `composer update`
- очистить кеш: `composer clearcache`

###_ПАКЕТЫ:_
#####ide-helper:
- установка: `composer require --dev barryvdh/laravel-ide-helper`
- генерация коментариев: `php artisan ide-helper:models Post User`
#####debugbar:
- `composer require barryvdh/laravel-debugbar --dev`

###_Консольные команды laravel:_
- версия laravel: `php artisan -v`
- показать все маршруты: `php artisan route:list`

- создать рулю: `php artisan make:rule KassaExistRole`
- перезагурзить кеш при изменениях в .evn `php artisan config:cache`
- cоздать посредника `php artisan make:middleware Connexion\Photos\CommentForPhoto`
- создать отпровителя email `php artisan make:mail FeedbackEmail`
- cоздать request `php artisan make:request Kassa/SendToKassaRequest`
- создать контроллер `php artisan make:controller KassaController`
- cоздать ресурсный контроллер:`php artisan make:controller Connexion\Photos\PhotosCommentController --resource --model=Models/Connexion/Photos/PhotosComment`
- Создать  модель: `php artisan make:model Models/Kassa`
- Создать исключение `php artisan make:exception Kassa/CurrencyNotFoundException`


####МИГРАЦИИ
- Создать миграцию и модель: `php artisan make:model Models/BlogCategory -m`
- Создать миграцию:
- `php artisan make:migration create_kassa_table`
- php artisan make:`migration create_users_table --create=users`
- php artisan make:`migration add_votes_to_users_table --table=users`
- Запуск миграции: `php artisan migrate`
- запуск миграции без потверждения:` php artisan migrate --force`
- Откатить миграцию: `php artisan migrate:rollback`
- откатить определенное количество миграций: `php artisan migrate:rollback --step=5`
- откатит все миграции: `php artisan migrate:reset`
- Откат и миграция с помощью одной команды: `php artisan migrate:refresh`
- Бросить все столы и мигрировать: `php artisan migrate:fresh`
- Рефреш с сидами:  `php artisan migrate: refresh --seed`

- cоздать сервис провайдер: `php artisan make:provider ConexionServiceProvider`
- создать обсервер: php artisan make:observer BlogCategoryObserver --model=Models\BlogCategory
- Создать миграцию и модель: php artisan make:model Models/BlogCategory -m
- Миграция в bd: php artisan migrate

####СИДЫ
- создать сид: `php artisan make:seeder UserSeeder`
- запуск сидов: `php artisan db:seed`
- запуск конкретного сида: `php artisan db:seed --class=UserTableSeeder`


####npm
- компиляция файлов: `npm run watch`

####
- создание PHPDoc для фасадов Laravel - php artisan ide-helper:generate
- PHPDocs для моделей - php artisan ide-helper:models
- Метафайл PhpStorm - php artisan ide-helper:meta

#### работа напрямую
# php artisan tinker
# Storage::disk('s3')->files()

#### получить блейды с пагинаторами
php artisan vendor:publish --tag=laravel-pagination


